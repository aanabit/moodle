{"version":3,"sources":["../src/folders.js"],"names":["define","$","Ajax","Notification","Str","Templates","Url","ModalFactory","ModalEvents","ACTIONS","CREATE_FOLDER","EDIT_FOLDER","Folders","registerEvents","prototype","click","e","preventDefault","parentid","data","addButtonText","get_strings","key","component","then","langStrings","modalTitle","create","title","body","render","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","on","save","name","currentTarget","find","val","createFolder","hidden","destroy","show","catch","exception","folderid","foldername","timecreated","timemodified","param","DEFAULT","newname","renameFolder","requestType","call","methodname","args","get_string","message","params","parent","errormsg","window","location","href","relativeUrl"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to manage content bank folder actions, such as create, delete or rename.\n *\n * @module     core_contentbank/folders\n * @package    core_contentbank\n * @copyright  2020 Amaia Anabitarte <amaia@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n        'jquery',\n        'core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/url',\n        'core/modal_factory',\n        'core/modal_events'],\n    function($,\n             Ajax,\n             Notification,\n             Str,\n             Templates,\n             Url,\n             ModalFactory,\n             ModalEvents\n    ) {\n\n        /**\n         * List of action selectors.\n         *\n         * @type {{CREATE_FOLDER: string}, {EDIT_FOLDER: string}}\n         */\n        var ACTIONS = {\n            CREATE_FOLDER: '[data-action=\"createfolder\"]',\n            EDIT_FOLDER: '[data-action=\"editfolder\"]',\n        };\n\n        /**\n         * Folders class.\n         */\n        var Folders = function() {\n            this.registerEvents();\n        };\n\n        /**\n         * Register event listeners.\n         */\n        Folders.prototype.registerEvents = function() {\n            $(ACTIONS.CREATE_FOLDER).click(function(e) {\n                e.preventDefault();\n\n                var parentid = $(this).data('parentid');\n                var strings = [\n                    {\n                        key: 'addnewfolder',\n                        component: 'core_contentbank'\n                    },\n                    {\n                        key: 'add',\n                        component: 'core_contentbank'\n                    },\n                ];\n                var addButtonText = '';\n                Str.get_strings(strings).then(function(langStrings) {\n                    var modalTitle = langStrings[0];\n                    addButtonText = langStrings[1];\n                    return ModalFactory.create({\n                        title: modalTitle,\n                        body: Templates.render('core_contentbank/newfolder', {'parentid': parentid}),\n                        type: ModalFactory.types.SAVE_CANCEL\n                    });\n                }).then(function(modal) {\n                    modal.setSaveButtonText(addButtonText);\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        // The action is now confirmed, sending an action for it.\n                        var name = $(e.currentTarget).find('#newname').val();\n                        return createFolder(name, parentid);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    // Show the modal.\n                    modal.show();\n                    return;\n                }).catch(Notification.exception);\n            });\n\n            $(ACTIONS.EDIT_FOLDER).click(function(e) {\n                e.preventDefault();\n\n                var parentid = $(this).data('parentid');\n                var folderid = $(this).data('folderid');\n                var foldername = $(this).data('foldername');\n                var timecreated = $(this).data('timecreated');\n                var timemodified = $(this).data('timemodified');\n\n                // parentid = 0;\n                // folderid = 58;\n                // timecreated = 10000;\n                // timemodified = 20000;\n\n                var strings = [\n                    {\n                        key: 'editfolder',\n                        component: 'core_contentbank',\n                        param: {\n                            foldername: foldername\n                        }\n                    }\n                ];\n                Str.get_strings(strings).then(function(langStrings) {\n                    var modalTitle = langStrings[0];\n                    return ModalFactory.create({\n                        title: modalTitle,\n                        body: Templates.render('core_contentbank/editfolder', {\n                            'parentid': parentid,\n                            'folderid': folderid,\n                            'foldername': foldername,\n                            'timecreated': timecreated,\n                            'timemodified': timemodified\n                        }),\n                        type: ModalFactory.types.DEFAULT\n                    });\n                }).then(function(modal) {\n                    modal.getRoot().on(ModalEvents.save, function(e) {\n                        // The action is now confirmed, sending an action for it.\n                        var newname = $(e.currentTarget).find('#foldername').val();\n                        return renameFolder(folderid, newname, parentid);\n                    });\n\n                    // Handle hidden event.\n                    modal.getRoot().on(ModalEvents.hidden, function() {\n                        // Destroy when hidden.\n                        modal.destroy();\n                    });\n\n                    // Show the modal.\n                    modal.show();\n                    return;\n                }).catch(Notification.exception);\n            });\n        };\n\n        /**\n         * Create folder in the content bank.\n         *\n         * @param {string} name The name for the new folder.\n         * @param {int} parentid The id of the parent folder.\n         */\n        function createFolder(name, parentid) {\n            var request = {\n                methodname: 'core_contentbank_create_folder',\n                args: {\n                    name: name,\n                    parentid: parentid\n                }\n            };\n\n            var requestType = 'success';\n            Ajax.call([request])[0].then(function(data) {\n                if (data) {\n                    return Str.get_string('foldercreated', 'core_contentbank');\n                }\n                requestType = 'error';\n                return Str.get_string('duplicatedfoldername', 'core_contentbank');\n\n            }).then(function(message) {\n                var params = null;\n                if (requestType == 'success') {\n                    params = {\n                        parent: parentid\n                    };\n                } else {\n                    params = {\n                        parent: parentid,\n                        errormsg: message\n                    };\n                }\n                // Redirect to the main content bank page and display error message if exists.\n                window.location.href = Url.relativeUrl('contentbank/index.php', params, false);\n                return;\n            }).catch(Notification.exception);\n        }\n\n        /**\n         * Rename folder in the content bank.\n         *\n         * @param {int} folderid The id of the folder to be renamed.\n         * @param {string} name The new name for the folder.\n         * @param {int} parentid The id of the parent folder for return URL.\n         */\n        function renameFolder(folderid, name, parentid) {\n            var request = {\n                methodname: 'core_contentbank_rename_folder',\n                args: {\n                    folderid: folderid,\n                    name: name\n                }\n            };\n\n            var requestType = 'success';\n            Ajax.call([request])[0].then(function(data) {\n                if (data) {\n                    return Str.get_string('folderrenamed', 'core_contentbank');\n                }\n                requestType = 'error';\n                return Str.get_string('duplicatedfoldername', 'core_contentbank');\n\n            }).then(function(message) {\n                var params = null;\n                if (requestType == 'success') {\n                    params = {\n                        parent: parentid\n                    };\n                } else {\n                    params = {\n                        parent: parentid,\n                        errormsg: message\n                    };\n                }\n                // Redirect to the main content bank page and display error message if exists.\n                window.location.href = Url.relativeUrl('contentbank/index.php', params, false);\n                return;\n            }).catch(Notification.exception);\n        }\n\n        return /** @alias module:core_contentbank/folders */ {\n            /**\n             * Initialise the unified user filter.\n             *\n             * @method init\n             * @return {Folders}\n             */\n            'init': function() {\n                return new Folders();\n            }\n        };\n    });"],"file":"folders.min.js"}