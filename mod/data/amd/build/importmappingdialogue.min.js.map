{"version":3,"file":"importmappingdialogue.min.js","sources":["../src/importmappingdialogue.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript module for deleting a database as a preset.\n *\n * @module      mod_data/importmappingdialogue\n * @copyright   2022 Amaia Anabitarte <amaia@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport Ajax from 'core/ajax';\nimport Url from 'core/url';\nimport Templates from 'core/templates';\nimport Modal from 'core/modal';\n\nconst selectors = {\n    selectPresetButton: 'input[name=\"selectpreset\"]',\n};\n\n/**\n * Initialize module\n */\nexport const init = () => {\n    registerEventListeners();\n};\n\n/**\n * Register events for user preset button.\n */\nconst registerEventListeners = () => {\n    document.addEventListener('click', (event) => {\n        const usepreset = event.target.closest(selectors.selectPresetButton);\n        if (usepreset) {\n            event.preventDefault();\n            mappingusepreset(usepreset);\n        }\n    });\n};\n\n/**\n * Show the confirmation modal for uploading a preset.\n *\n * @param {HTMLElement} usepreset the preset to import.\n */\nconst mappingusepreset = (usepreset) => {\n    const presetName = usepreset.getAttribute('data-presetname');\n    const cmId = usepreset.getAttribute('data-cmid');\n\n    mappingdialogue(presetName, cmId);\n};\n\n/**\n * Show the confirmation modal to map presets.\n *\n * @param {string} presetName The preset name to delete.\n * @param {int} cmId The id of the current database activity.\n */\nconst mappingdialogue = (presetName, cmId) => {\n    showMappingDialogue(cmId, presetName).then((result) => {\n        if (result.data && result.data.needsmapping) {\n            const cancelButton = Url.relativeUrl(\n                   'mod/data/preset.php',\n                   {\n                       id: cmId,\n                   },\n                   false\n               );\n            result.data['cancel'] = cancelButton;\n            const mapButton = Url.relativeUrl(\n                   'mod/data/field.php',\n                   {\n                       id: cmId,\n                       fullname: presetName,\n                       mode: 'usepreset',\n                       action: 'select',\n                   },\n                   false\n               );\n            result.data['mapfieldsbutton'] = mapButton;\n            const applyButton = Url.relativeUrl(\n                   'mod/data/field.php',\n                   {\n                       id: cmId,\n                       fullname: presetName,\n                       mode: 'usepreset',\n                       action: 'notmapping'\n                   },\n                   false\n               );\n            result.data['applybutton'] = applyButton;\n            let modalPromise = Templates.render('mod_data/fields_mapping_modal', result.data);\n            modalPromise.then(function(html) {\n                return new Modal(html);\n            }).fail(Notification.exception)\n                .then((modal) => {\n                    modal.show();\n                    return modal;\n                }).fail(Notification.exception);\n                return result;\n        } else {\n            window.location.href = Url.relativeUrl(\n                'mod/data/field.php',\n                {\n                    id: cmId,\n                    mode: 'usepreset',\n                    fullname: presetName,\n                },\n                false\n            );\n        }\n    });\n};\n\n/**\n * Check whether we should show the mapping dialogue or not.\n *\n * @param {int} cmId The id of the current database activity.\n * @param {string} presetName The preset name to delete.\n * @return {promise} Resolved with the result and warnings of deleting a preset.\n */\nasync function showMappingDialogue(cmId, presetName) {\n    var request = {\n        methodname: 'mod_data_get_mapping_information',\n        args: {\n            cmid: cmId,\n            import: presetName,\n        }\n    };\n    return Ajax.call([request])[0];\n}\n"],"names":["selectors","registerEventListeners","document","addEventListener","event","usepreset","target","closest","preventDefault","mappingusepreset","presetName","getAttribute","cmId","mappingdialogue","request","methodname","args","cmid","import","Ajax","call","showMappingDialogue","then","result","data","needsmapping","cancelButton","Url","relativeUrl","id","mapButton","fullname","mode","action","applyButton","Templates","render","html","Modal","fail","Notification","exception","modal","show","window","location","href"],"mappings":";;;;;;;sSA6BMA,6BACkB,2CAMJ,KAChBC,gCAMEA,uBAAyB,KAC3BC,SAASC,iBAAiB,SAAUC,cAC1BC,UAAYD,MAAME,OAAOC,QAAQP,8BACnCK,YACAD,MAAMI,iBACNC,iBAAiBJ,gBAUvBI,iBAAoBJ,kBAChBK,WAAaL,UAAUM,aAAa,mBACpCC,KAAOP,UAAUM,aAAa,aAEpCE,gBAAgBH,WAAYE,OAS1BC,gBAAkB,CAACH,WAAYE,wBA+DFA,KAAMF,gBACjCI,QAAU,CACVC,WAAY,mCACZC,KAAM,CACFC,KAAML,KACNM,OAAQR,oBAGTS,cAAKC,KAAK,CAACN,UAAU,IAtE5BO,CAAoBT,KAAMF,YAAYY,MAAMC,YACpCA,OAAOC,MAAQD,OAAOC,KAAKC,aAAc,OACnCC,aAAeC,aAAIC,YAClB,sBACA,CACIC,GAAIjB,OAER,GAEPW,OAAOC,KAAP,OAAwBE,mBAClBI,UAAYH,aAAIC,YACf,qBACA,CACIC,GAAIjB,KACJmB,SAAUrB,WACVsB,KAAM,YACNC,OAAQ,WAEZ,GAEPV,OAAOC,KAAP,gBAAiCM,gBAC3BI,YAAcP,aAAIC,YACjB,qBACA,CACIC,GAAIjB,KACJmB,SAAUrB,WACVsB,KAAM,YACNC,OAAQ,eAEZ,UAEPV,OAAOC,KAAP,YAA6BU,YACVC,mBAAUC,OAAO,gCAAiCb,OAAOC,MAC/DF,MAAK,SAASe,aAChB,IAAIC,eAAMD,SAClBE,KAAKC,sBAAaC,WAChBnB,MAAMoB,QACHA,MAAMC,OACCD,SACRH,KAAKC,sBAAaC,WACdlB,OAEXqB,OAAOC,SAASC,KAAOnB,aAAIC,YACvB,qBACA,CACIC,GAAIjB,KACJoB,KAAM,YACND,SAAUrB,aAEd"}